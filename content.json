{"meta":{"title":"小吴的博客","subtitle":"你在北方的豆腐脑加了点盐","description":null,"author":"NingYu Wu","url":"http://buptwny.github.io"},"pages":[],"posts":[{"title":"故障测试","slug":"p20170901","date":"2017-09-01T06:50:00.000Z","updated":"2017-09-01T12:29:42.000Z","comments":true,"path":"2017/09/01/p20170901/","link":"","permalink":"http://buptwny.github.io/2017/09/01/p20170901/","excerpt":"","text":"测试测试测试测试","categories":[],"tags":[]},{"title":"","slug":"p20170817-1","date":"2017-08-17T04:55:29.000Z","updated":"2017-09-01T12:25:51.000Z","comments":true,"path":"2017/08/17/p20170817-1/","link":"","permalink":"http://buptwny.github.io/2017/08/17/p20170817-1/","excerpt":"","text":"title: jQuery扩展方法的简单使用笔记date: 2017-08-17 13:00:00 jQuery中封装有两个用具有扩展功能的方法：$.extend()和$.fn.extend()1.$.extend():一个简单的使用格式为 $.extend({...}) 这种写法可以将参数中的对象扩展到jQuery的全局对象上，例如 $.extend({ say:function(){ alert('hello'); } }); $.say(); 另一个简单的使用格式为 $.extend(obj,obj) 这种写法返回一个由两个对象组合而成的对象，例如 $.extend({...}) 这种写法可以将参数中的对象扩展到jQuery的全局对象上，例如 var o = { name:'James' } o = $.extend(o,{ age:'26' }); alert(o.age); 2.$.fn.extend(): 该方法可以扩展实例化的jquery对象： $.extend(obj,obj) 这种写法返回一个由两个对象组合而成的对象，例如 $.extend({...}) 这种写法可以将参数中的对象扩展到jQuery的全局对象上，例如 $.fn.extend({ say:function(){ alert('hello'); } }); $('body').say()","categories":[],"tags":[]},{"title":"MacOs安装python包管理工具pip","slug":"p20170720-1","date":"2017-07-20T06:50:00.000Z","updated":"2017-07-20T07:19:47.000Z","comments":true,"path":"2017/07/20/p20170720-1/","link":"","permalink":"http://buptwny.github.io/2017/07/20/p20170720-1/","excerpt":"","text":"工作中有时候我们会使用到pip指令来对python包进行管理，例如执行： sudo pip install -U pipsudo pip install –extra-index-url http://pypi.yin… 什么是pip:pip是安装和管理python包的工具，类似python的easy_install工具，我们可以通过python的easy_install命令来安装pip，而easy_install命令的使用需要python-setuptools包，因此首先要安装python的setuptools 第一步、安装setuptools:进入https://pypi.python.org/pypi/setuptools下载setuptools的安装包，然后解压，进入该安装包文件，执行 sudo python setup.py install完成setuptools的安装 第二步、使用setuptools的easyinstall安装pip:执行sudo easy_install pip(若提示缺少module，则下载相应module，则需要先安装此module。例如提示ImportError: No module named extern，则下载该module，解压后进入该文件，然后执行sudo python setup.py install 即可)等待一段时间后提示Finished processing dependencies for pip，则python的pip工具安装成功。","categories":[],"tags":[]},{"title":"PHP使用array_multisort()进行多重条件排序","slug":"p20170711-1","date":"2017-07-11T03:04:00.000Z","updated":"2017-07-11T03:46:54.000Z","comments":true,"path":"2017/07/11/p20170711-1/","link":"","permalink":"http://buptwny.github.io/2017/07/11/p20170711-1/","excerpt":"","text":"查看官方文档手册，array_multisort()方法的作用是对多个数组或者多维数组进行排序。这里重点介绍的是使用该方法对数组进行多重条件排序的实际使用场景。比方说，在实际开发中，需要对一个数据数组进行排序，一共有五个项目数据，每个项目有两个参数，一个为是否在售，另一个为销售额度。要求对这组项目数据进行排序，在售的和销售额度大的优先。我们可以定一个数组对这样的排序需求进模拟：其中”isGray”为0表示在售，为1表示售完，”num”表示项目销售额度，我们使用两个数组a和b分别保存五个项目的销售情况和销售额度，那么在排序前，各数组的情况如下：arra: [1,0,0,1,0]arrb: [2,4,3,8,6]arr: [a,b,c,d,e]然后我们使用对项目数据进行在售情况和销售额度两个条件的排序，排序后各数组情况如下：arra: [0,0,0,1,1]arrb: [6,4,3,8,2]arr: [e,b,c,d,a] 分析排序原理：该方法中，三个数组中每个值的位置都是一一对应的。1.该方法首先按照第一个数组中的值进行升序排序，则b数组中的‘4’、‘3’、‘6’会被提到数组前面，而‘2’、‘8’被放到数组后面，arr中的‘b’、‘c’、‘e’被提到组数前面，‘a’和‘d’被放到数组后面。2.在第一次排序后，由于第一个数组中的前三个值和后两个值分别相等，所以需要按照第二个数组中的值进行第二次排序，而第二个数组的排序策略是降序排列。所以b数组中的［4,3,6］排序为[6,4,3]，[2,8]排序为[8,2]。 arr中的[b,c,e]相应地排序为［e,b,c］(因为b、c、e的销售情况都是在售0，即在第一个数组中对应位置的值相等，但是按照第二个数组中对应位置的销售额度来看，则为e&gt;b&gt;c，后面的a和d的排序以此类推)，arr中的[a,d]相应地排序为[d,a]","categories":[],"tags":[]},{"title":"yii2框架安装并使用redis扩展笔记","slug":"p20170629-1","date":"2017-06-29T03:35:00.000Z","updated":"2017-06-29T03:54:11.000Z","comments":true,"path":"2017/06/29/p20170629-1/","link":"","permalink":"http://buptwny.github.io/2017/06/29/p20170629-1/","excerpt":"","text":"1.首先要安装composer,composer的具体安装步骤省略，安装完成后可以通过 mv composer.phar /usr/local/bin composer将composer命令设置为全局命令 2.安装redis，redis的安装步骤省略3.安装yii2的redis扩展方法一： cd /www/html/basiccomposer require –prefer-dist yiisoft/yii2-redis方法二：到https://github.com/yiisoft/yii2-redis下载yii2-redis文件，并放到yiisoft的相应位置:4.在redis的 src文件夹下执行./redis-server命令启动redis服务5.配置basic/config/web.php,在components数组中添加组件： ‘redis’ =&gt; [ ‘class’ =&gt; ‘yii\\redis\\Connection’, ‘hostname’ =&gt; ‘localhost’, ‘port’ =&gt; 6379, ‘database’ =&gt; 0,],6.使用redis（切记一定要执行第4步保证redis服务已经启动）:","categories":[],"tags":[]},{"title":"yii2框架通过自定义Controller进行登录态获取","slug":"p20170628","date":"2017-06-28T07:50:17.000Z","updated":"2017-06-28T07:48:41.000Z","comments":true,"path":"2017/06/28/p20170628/","link":"","permalink":"http://buptwny.github.io/2017/06/28/p20170628/","excerpt":"","text":"1.自定义controller，若cookie中存在username,则获取登录态和用户名： 其中，init()方法继承父类的init，在该MyController或是继承MyController的控制器实例化的时候，会掉用_construct()函数，并掉用init()方法进行初始化: 2.在后台cgi中进行cookie操作,若登录成功则添加username的cookie，若登出则删除username的cookie： 3.在view渲染的时候进行登录态判断其中js逻辑省略，只需要理解上面的php部分逻辑","categories":[],"tags":[]},{"title":"yii2框架自定义过滤器","slug":"p20170628-2","date":"2017-06-28T07:50:17.000Z","updated":"2017-06-28T08:09:51.000Z","comments":true,"path":"2017/06/28/p20170628-2/","link":"","permalink":"http://buptwny.github.io/2017/06/28/p20170628-2/","excerpt":"","text":"1.自定义过滤器TestFilter，继承ActionFilter,重写beforeAction和afterAction:2.定义TestController:若去掉’only’参数，则该过滤器会对TestController中的所有action起作用:具体的实际应用可以通过自定义的过滤器进行具体编写","categories":[],"tags":[]},{"title":"常用JS正则表达笔记","slug":"p20170627","date":"2017-06-27T11:47:17.000Z","updated":"2017-06-27T11:47:49.000Z","comments":true,"path":"2017/06/27/p20170627/","link":"","permalink":"http://buptwny.github.io/2017/06/27/p20170627/","excerpt":"","text":"1.11位手机号: if(!(/^1[34578]\\d{9}$/.test(accountNum))){ alert(\"手机号码有误，请重填\"); return; }","categories":[],"tags":[]},{"title":"shell 命令 ls -la 参数解析","slug":"p20170620","date":"2017-06-19T16:20:17.000Z","updated":"2017-06-20T16:38:01.000Z","comments":true,"path":"2017/06/20/p20170620/","link":"","permalink":"http://buptwny.github.io/2017/06/20/p20170620/","excerpt":"","text":"linux想要查看文件的详细信息，可以通过执行ls -la进行查看 其中‘l’代表long，即显示详细信息‘a’代表all，即显示所有信息如执行ls -la .git，查看本地git仓库具体信息如下： 可以看到，显示的列表分为7列第一列：文件权限，一共有10个二进制位，第一位表示该项是否为文件夹，若为d则表示文件夹。剩下的9位以每3位为一组，分别表示该项的使用用户、与用户同一组的用户和其他用户的文件访问权限。(r表示可读，w表示可写，x表示可执行)如：－rwx-w-r–表示该项为文件，使用者的权限为可读可写可执行,同组用户的权限为不可读可写不可执行，其他用户的权限为可读不可写不可执行。第二列：文件数量第三列：文件拥有者，一般是账号名称第四列：文件拥有者所属的组第五列：文件大小第六列：文件创建时间第七列：文件名称","categories":[],"tags":[]},{"title":"轻轻滴我来了","slug":"hello","date":"2017-02-24T10:32:17.000Z","updated":"2017-02-24T12:09:12.000Z","comments":true,"path":"2017/02/24/hello/","link":"","permalink":"http://buptwny.github.io/2017/02/24/hello/","excerpt":"","text":"白日依山尽，黄河入海流欲穷千里目，更上一层楼 谢谢使用Hexo","categories":[],"tags":[]}]}